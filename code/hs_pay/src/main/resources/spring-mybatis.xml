<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- 配置数据源 DataSource, 使用应用内的C3P0数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--指定连接数据库的驱动 -->
        <property name="driverClass" value="${JDBC_DRIVERCLASSNAME}" />
        <!--指定连接数据库的URL -->
        <property name="jdbcUrl" value="${JDBC_URL}" />
        <!--指定连接数据库的用户名 -->
        <property name="user" value="${JDBC_USERNAME}" />
        <!--指定连接数据库的密码 -->
        <property name="password" value="${JDBC_PASSWORD}" />
        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="${INITIAL_POOL_SIZE}" />
        <!--指定连接数据库连接池的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="${MAX_POOL_SIZE}" />

        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="${MAX_IDLE_TIME}" />
        <!--指定连接数据库连接池的最小连接数 -->
        <property name="minPoolSize" value="${MIN_POOL_SIZE}" />
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="${ACQUIRE_INCREMENT}" />
        <!--每n秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="${IDLE_CONNECTION_TEST_PERIOD}" />
        <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。 -->
        <property name="maxStatements" value="${MAX_STATEMENTS}" />
        <!--C3P0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能。Default: 3 -->
        <property name="numHelperThreads" value="${NUM_HELPER_THREADS}" />

    </bean>

    <!-- mybatis文件配置，引用数据源、配置分页插件、扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource" p:configLocation="classpath:mybatis-config.xml" p:mapperLocations="classpath*:com/hszsd/webpay/dao/mapper/*Mapper.xml" >
    </bean>

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="com.hszsd.webpay.dao" p:sqlSessionFactoryBeanName="sqlSessionFactory" />

    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource" />

    <!-- 开启事务控制的注解支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>