#配置引擎实现类
ENGINE=org.beetl.core.engine.FastRuntimeEngine
#指定了占位符号，默认是${ }.也可以指定为其他占位符
DELIMITER_PLACEHOLDER_START=${
DELIMITER_PLACEHOLDER_END=}
#指定了语句的定界符号，默认是<% %>,也可以指定为其他定界符号
DELIMITER_STATEMENT_START=@
DELIMITER_STATEMENT_END=null
#指定IO输出模式，默认是FALSE,即通常的字符输出，再考虑高性能情况下，可以设置成true
DIRECT_BYTE_OUTPUT = FALSE
#指定了支持HTML标签，且符号为#（只能用一个符号标示），默认配置下，模板引擎识别<#tag ></#tag>
#这样的类似html标签，并能调用相应的标签函数。
HTML_TAG_SUPPORT = true
HTML_TAG_FLAG = #
#指定允许本地Class直接调用
NATIVE_CALL = TRUE
#指定模板字符集是UTF-8
TEMPLATE_CHARSET = UTF-8
#指定异常的解析类，默认是ConsoleErrorHandler，他将在render发生异常的时候在后台打印出错误信息(System.out)。
ERROR_HANDLER = org.beetl.core.ConsoleErrorHandler
#指定了本地Class调用的安全策略
NATIVE_SECUARTY_MANAGER= org.beetl.core.DefaultNativeSecurityManager
#指定了默认使用的模板资源加载器
RESOURCE_LOADER=org.beetl.core.resource.ClasspathResourceLoader
#配置了是否进行严格MVC，通常情况下，此处设置为false.
MVC_STRICT = FALSE
#资源配置，resource后的属性只限于特定ResourceLoader
#classpath
#根路径(其实就是前缀的配置)
RESOURCE.root= /WEB-INF/pages/
#是否检测文件变化
RESOURCE.autoCheck=true
#自定义脚本方法文件的Root目录和后缀
RESOURCE.functionRoot = functions
RESOURCE.functionSuffix = fn
#自定义标签文件Root目录和后缀
RESOURCE.tagRoot = htmltag
RESOURCE.tagSuffix = tag


##### 扩展 ##############
## 内置的方法
#FN.date = org.beetl.ext.fn.DateFunction
#FN.nvl = org.beetl.ext.fn.NVLFunction
#FN.debug = org.beetl.ext.fn.DebugFunction
#FN.exist = org.beetl.ext.fn.CheckExistFunction
#FN.printf = org.beetl.ext.fn.Printf
#FN.decode = org.beetl.ext.fn.DecodeFunction
#FN.assert = org.beetl.ext.fn.AssertFunction
#FN.print = org.beetl.ext.fn.Print
#FN.println = org.beetl.ext.fn.Println
#FN.trunc = org.beetl.ext.fn.TruncFunction
#FN.empty = org.beetl.ext.fn.EmptyFunction
#FN.qmark = org.beetl.ext.fn.QuestionMark
#FN.isEmpty = org.beetl.ext.fn.EmptyExpressionFunction
#FN.parseInt = org.beetl.ext.fn.ParseInt
#FN.parseDouble= org.beetl.ext.fn.ParseDouble
#FN.range = org.beetl.ext.fn.Range
##内置的功能包
#FNP.strutil = org.beetl.ext.fn.StringUtil
#FNP.array = org.beetl.ext.fn.ArrayUtil

##内置的格式化函数
#FT.dateFormat =  org.beetl.ext.format.DateFormat
#FT.numberFormat =  org.beetl.ext.format.NumberFormat
##内置的默认格式化函数
#FTC.java.util.Date = org.beetl.ext.format.DateFormat
#FTC.java.sql.Date = org.beetl.ext.format.DateFormat
#FTC.java.sql.Time = org.beetl.ext.format.DateFormat
#FTC.java.sql.Timestamp = org.beetl.ext.format.DateFormat
#FTC.java.lang.Short = org.beetl.ext.format.NumberFormat
#FTC.java.lang.Long = org.beetl.ext.format.NumberFormat
#FTC.java.lang.Integer = org.beetl.ext.format.NumberFormat
#FTC.java.lang.Float = org.beetl.ext.format.NumberFormat
#FTC.java.lang.Double = org.beetl.ext.format.NumberFormat
#FTC.java.math.BigInteger = org.beetl.ext.format.NumberFormat
#FTC.java.math.BigDecimal = org.beetl.ext.format.NumberFormat
#FTC.java.util.concurrent.atomic.AtomicLong = org.beetl.ext.format.NumberFormat
#FTC.java.util.concurrent.atomic.AtomicInteger = org.beetl.ext.format.NumberFormat

## 标签类
#TAG.include= org.beetl.ext.tag.IncludeTag
#TAG.includeFileTemplate= org.beetl.ext.tag.IncludeTag
#TAG.layout= org.beetl.ext.tag.LayoutTag
#TAG.delete= org.beetl.ext.tag.DeleteTag
#TAG.htmltag= org.beetl.ext.tag.HTMLTagSupportWrapper